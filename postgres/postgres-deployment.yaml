#apiVersion: extensions/v1beta1
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          # image: postgres:11.1
          # image: mdillon/postgis:latest
          # image: tomtor/postgis:postgis251_1e-1_fix12_tolerance
          # image: tomtor/postgis:postgis251_11.3_fix
          # image: tomtor/postgis:postgis300trunk_SFCGAL413_12.beta
          image: tomtor/postgis:postgis300trunk_SFCGAL413_12.rc1
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432
          lifecycle:
                  # postStart:
                  #   exec:
                  #     command: ["/bin/sh", "-c", "sleep 60; echo \"DROP TABLESPACE temp_ts; CREATE TABLESPACE temp_ts LOCATION '/mnt'; GRANT CREATE ON TABLESPACE temp_ts TO PUBLIC; SET temp_tablespaces TO 'temp_ts';\" | psql -U postgresadmin postgresdb"]
            preStop:
              exec:
                # command: ["/bin/sh", "-c", "echo \"DROP TABLESPACE temp_ts;\" | psql -U postgresadmin postgresdb; PGDATA=/var/lib/postgresql/data /usr/lib/postgresql/11/bin/pg_ctl stop"]
                command: ["/bin/su", "postgres", "-c", "pg_ctl stop -D /var/lib/postgresql/data"]
          envFrom:
            - configMapRef:
                name: postgres-config
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgredb
      volumes:
        - name: postgredb
          persistentVolumeClaim:
            #claimName: postgres-pv-claim
            claimName: postgres12-0-pv-claim
