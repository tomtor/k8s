#apiVersion: extensions/v1beta1
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          #image: tomtor/postgis:postgis302_pg13.1
          #image: tomtor/postgis:postgis-4p2tom_pg13.1
          #image: tomtor/postgis:postgis31rc1pg13.1
          #image: tomtor/postgis:postgis310pg13.1
          #image: tomtor/postgis:postgis310pg13.4
          image: tomtor/postgis:postgis320pg14
          #image: postgres:latest
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432
          lifecycle:
                  # postStart:
                  #   exec:
                  #     command: ["/bin/sh", "-c", "sleep 60; echo \"DROP TABLESPACE temp_ts; CREATE TABLESPACE temp_ts LOCATION '/mnt'; GRANT CREATE ON TABLESPACE temp_ts TO PUBLIC; SET temp_tablespaces TO 'temp_ts';\" | psql -U postgresadmin postgresdb"]
            preStop:
              exec:
                # command: ["/bin/sh", "-c", "echo \"DROP TABLESPACE temp_ts;\" | psql -U postgresadmin postgresdb; PGDATA=/var/lib/postgresql/data /usr/lib/postgresql/11/bin/pg_ctl stop"]
                command: ["/bin/su", "postgres", "-c", "pg_ctl stop -D /var/lib/postgresql/data"]
          envFrom:
            - configMapRef:
                name: postgres-config
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgredb
            - mountPath: /dev/shm
              name: dshm
      volumes:
        - name: dshm
          emptyDir:
            medium: Memory
            sizeLimit: 1024Mi
        - name: postgredb
          persistentVolumeClaim:
            #claimName: postgres12-pv-claim
            #claimName: postgres13-pv-claim
            claimName: postgres-pv-claim
